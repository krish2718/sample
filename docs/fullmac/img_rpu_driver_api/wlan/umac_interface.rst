=========
UMAC API
=========

The UMAC API provides an interface for the Wireless and Networking stacks in the Host to communicate with Imagination's UMAC firmware running in the RPU.
The communication with the UMAC takes place primarily using two constructs:

1) Commands
2) Events

The API takes care of encapsulating the information provided by the API invoker into commands and passing them to the UMAC for further processing.
Similarly the API takes care of processing the events generated by the UMAC and forwards the parsed information to the callback functions which are to be provided by the Host


Structures
==========


This sections covers the various structures needed for:
        
        a. Maintaining UMAC IF layer context information.
        b. Commands/Events needed to interact with the UMAC.
        c. Returning status of various operations carried out in the UMAC IF layer.
        d. Any other supporting functionality.

.. kernel-doc:: drivers/net/wireless/img/fw_if/umac_if/inc/fmac_structs.h
.. kernel-doc:: drivers/net/wireless/img/fw_if/umac_if/inc/fw/host_rpu_umac_if.h


Functions
=========

This section covers the various functions needed for:
        
        a. Initializing/Deinitializing the UMAC IF layer.
        b. Sending different commands to the UMAC.
        c. Handling different events from the UMAC.

These functions are expected to be called by any software which is going to use the UMAC IF layer to interact with Imagination's UMAC firmware running in the RPU.

.. kernel-doc:: drivers/net/wireless/img/fw_if/umac_if/inc/fmac_api.h
